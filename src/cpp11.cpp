// Generated by cpp11: do not edit by hand
// clang-format off


#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// distrVMF.cpp
cpp11::doubles dvmf_impl(const cpp11::doubles_matrix<> & x, const cpp11::doubles & mu, double kappa, bool log);
extern "C" SEXP _sphericaldistributions_dvmf_impl(SEXP x, SEXP mu, SEXP kappa, SEXP log) {
  BEGIN_CPP11
    return cpp11::as_sexp(dvmf_impl(cpp11::as_cpp<cpp11::decay_t<const cpp11::doubles_matrix<> &>>(x), cpp11::as_cpp<cpp11::decay_t<const cpp11::doubles &>>(mu), cpp11::as_cpp<cpp11::decay_t<double>>(kappa), cpp11::as_cpp<cpp11::decay_t<bool>>(log)));
  END_CPP11
}
// distrVMF.cpp
cpp11::doubles pvmf_impl(const cpp11::doubles_matrix<> & x, const cpp11::doubles & mu, double kappa);
extern "C" SEXP _sphericaldistributions_pvmf_impl(SEXP x, SEXP mu, SEXP kappa) {
  BEGIN_CPP11
    return cpp11::as_sexp(pvmf_impl(cpp11::as_cpp<cpp11::decay_t<const cpp11::doubles_matrix<> &>>(x), cpp11::as_cpp<cpp11::decay_t<const cpp11::doubles &>>(mu), cpp11::as_cpp<cpp11::decay_t<double>>(kappa)));
  END_CPP11
}
// distrVMF.cpp
cpp11::doubles_matrix<> rvmf_impl(unsigned int n, const cpp11::doubles & mu, double kappa);
extern "C" SEXP _sphericaldistributions_rvmf_impl(SEXP n, SEXP mu, SEXP kappa) {
  BEGIN_CPP11
    return cpp11::as_sexp(rvmf_impl(cpp11::as_cpp<cpp11::decay_t<unsigned int>>(n), cpp11::as_cpp<cpp11::decay_t<const cpp11::doubles &>>(mu), cpp11::as_cpp<cpp11::decay_t<double>>(kappa)));
  END_CPP11
}
// distrVMF.cpp
cpp11::list fit_vmf_impl(const cpp11::doubles_matrix<> & x);
extern "C" SEXP _sphericaldistributions_fit_vmf_impl(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(fit_vmf_impl(cpp11::as_cpp<cpp11::decay_t<const cpp11::doubles_matrix<> &>>(x)));
  END_CPP11
}
// distrWatson.cpp
cpp11::doubles dwatson_impl(const cpp11::doubles_matrix<> & x, const cpp11::doubles & mu, double kappa, bool log);
extern "C" SEXP _sphericaldistributions_dwatson_impl(SEXP x, SEXP mu, SEXP kappa, SEXP log) {
  BEGIN_CPP11
    return cpp11::as_sexp(dwatson_impl(cpp11::as_cpp<cpp11::decay_t<const cpp11::doubles_matrix<> &>>(x), cpp11::as_cpp<cpp11::decay_t<const cpp11::doubles &>>(mu), cpp11::as_cpp<cpp11::decay_t<double>>(kappa), cpp11::as_cpp<cpp11::decay_t<bool>>(log)));
  END_CPP11
}
// distrWatson.cpp
cpp11::doubles pwatson_impl(const cpp11::doubles_matrix<> & x, const cpp11::doubles & mu, double kappa);
extern "C" SEXP _sphericaldistributions_pwatson_impl(SEXP x, SEXP mu, SEXP kappa) {
  BEGIN_CPP11
    return cpp11::as_sexp(pwatson_impl(cpp11::as_cpp<cpp11::decay_t<const cpp11::doubles_matrix<> &>>(x), cpp11::as_cpp<cpp11::decay_t<const cpp11::doubles &>>(mu), cpp11::as_cpp<cpp11::decay_t<double>>(kappa)));
  END_CPP11
}
// distrWatson.cpp
cpp11::doubles_matrix<> rwatson_impl(unsigned int n, const cpp11::doubles & mu, double kappa);
extern "C" SEXP _sphericaldistributions_rwatson_impl(SEXP n, SEXP mu, SEXP kappa) {
  BEGIN_CPP11
    return cpp11::as_sexp(rwatson_impl(cpp11::as_cpp<cpp11::decay_t<unsigned int>>(n), cpp11::as_cpp<cpp11::decay_t<const cpp11::doubles &>>(mu), cpp11::as_cpp<cpp11::decay_t<double>>(kappa)));
  END_CPP11
}
// distrWatson.cpp
cpp11::list fit_watson_impl(const cpp11::doubles_matrix<> & x);
extern "C" SEXP _sphericaldistributions_fit_watson_impl(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(fit_watson_impl(cpp11::as_cpp<cpp11::decay_t<const cpp11::doubles_matrix<> &>>(x)));
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_sphericaldistributions_dvmf_impl",       (DL_FUNC) &_sphericaldistributions_dvmf_impl,       4},
    {"_sphericaldistributions_dwatson_impl",    (DL_FUNC) &_sphericaldistributions_dwatson_impl,    4},
    {"_sphericaldistributions_fit_vmf_impl",    (DL_FUNC) &_sphericaldistributions_fit_vmf_impl,    1},
    {"_sphericaldistributions_fit_watson_impl", (DL_FUNC) &_sphericaldistributions_fit_watson_impl, 1},
    {"_sphericaldistributions_pvmf_impl",       (DL_FUNC) &_sphericaldistributions_pvmf_impl,       3},
    {"_sphericaldistributions_pwatson_impl",    (DL_FUNC) &_sphericaldistributions_pwatson_impl,    3},
    {"_sphericaldistributions_rvmf_impl",       (DL_FUNC) &_sphericaldistributions_rvmf_impl,       3},
    {"_sphericaldistributions_rwatson_impl",    (DL_FUNC) &_sphericaldistributions_rwatson_impl,    3},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_sphericaldistributions(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
